set(@PROJECT_NAME@_VERSION @PROJECT_VERSION@)

@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")

set_and_check(@PROJECT_NAME@_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set(@PROJECT_NAME@_INCLUDE_DIRS "${@PACKAGE_NAME@_INCLUDE_DIR}")

set(@PROJECT_NAME@_shared_FOUND FALSE)
if (TARGET @PROJECT_NAME@_shared)
	set(@PROJECT_NAME@_shared_FOUND TRUE)
	add_library(@PROJECT_NAME@::shared INTERFACE)
	target_link_libraries(@PROJECT_NAME@::shared INTERFACE @PROJECT_NAME@_shared)
	target_include_directories(@PROJECT_NAME@::shared INTERFACE "${@PROJECT_NAME@_INCLUDE_DIRS}")
endif()

set(@PROJECT_NAME@_static_FOUND FALSE)
if (TARGET @PROJECT_NAME@_static)
	set(@PROJECT_NAME@_static_FOUND TRUE)
	add_library(@PROJECT_NAME@::static INTERFACE)
	target_link_libraries(@PROJECT_NAME@::static INTERFACE @PROJECT_NAME@_static)
	target_include_directories(@PROJECT_NAME@::static INTERFACE "${@PROJECT_NAME@_INCLUDE_DIRS}")
endif()

if (@PROJECT_NAME@_shared_FOUND)
	add_library(@PROJECT_NAME@ INTERFACE)
	target_link_libraries(@PROJECT_NAME@ INTERFACE @PROJECT_NAME@::shared)
elseif (@PROJECT_NAME@_static_FOUND)
	add_library(@PROJECT_NAME@ INTERFACE)
	target_link_libraries(@PROJECT_NAME@ INTERFACE @PROJECT_NAME@::static)
else()
	set(@PROJECT_NAME@_FOUND FALSE)
endif()

check_required_components(@PROJECT_NAME@)
